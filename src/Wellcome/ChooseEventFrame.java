/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Wellcome;

import java.awt.Color;
import java.awt.Container;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Kibria
 */
public class ChooseEventFrame extends javax.swing.JFrame {

    /**
     * Creates new form ChooseEventFrame
     */
    private Container c;
    int dd, mm, yy;
    String allDate = "", dateday, day = "", month = "", year = "";

    public ChooseEventFrame() {
        initComponents();  
        c = this.getContentPane();
        Current_Date_Time ff = new Current_Date_Time();
        String Time = ff.Current_Time;
        String Date = ff.Current_Date;
        Current_time.setText(Time);
        Current_date.setText(Date);
        
        this.setResizable(false);
        this.setVisible(true);
        this.setSize(784,695);
        this.setLocation(280, 10);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setTitle("Smart_Calender");
        c.setBackground(Color.PINK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ChooseEventTable = new javax.swing.JTable();
        ChooseEventLabel = new javax.swing.JLabel();
        ChooseEventFieldname = new javax.swing.JTextField();
        ChooseEventFieldDate = new javax.swing.JTextField();
        ChooseEventEnterButton = new javax.swing.JButton();
        ChooseEventBackButton = new javax.swing.JButton();
        ChooseExit = new javax.swing.JButton();
        Current_Time2 = new javax.swing.JLabel();
        Current_time = new javax.swing.JTextField();
        jb3 = new javax.swing.JButton();
        jb2 = new javax.swing.JButton();
        jb8 = new javax.swing.JButton();
        jb4 = new javax.swing.JButton();
        jb1 = new javax.swing.JButton();
        jb6 = new javax.swing.JButton();
        jb7 = new javax.swing.JButton();
        Time_date = new javax.swing.JTextField();
        jb9 = new javax.swing.JButton();
        jb5 = new javax.swing.JButton();
        jb10 = new javax.swing.JButton();
        Current_Date2 = new javax.swing.JLabel();
        Current_date = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        ChooseEventTable.setBackground(new java.awt.Color(204, 204, 204));
        ChooseEventTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 0), 2, true));
        ChooseEventTable.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        ChooseEventTable.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "New Year’s Day", "1/1/1000"},
                {"2", "Baul festival", "8/1/1870"},
                {"3", "Shodesh prottaborton dibosh", "10/1/1972"},
                {"4", "International Parity at Work Day", "11/1/2017"},
                {"5", "Ghuri festival", "14/1/1740"},
                {"6", "International Religion Day", "18/1/1950"},
                {"7", "Bangladesh Freedom Day", "23/1/1954"},
                {"8", "International Holocaust Remembrance Day", "27/1/1945"},
                {"9", "International Reducing CO2 Emissions Day", "28/1/1992"},
                {"10", "International of Nonviolence and Peace Day", "30/1/1982"},
                {"11", "Street Children’s Day", "31/1/2009"},
                {"12", "World Wetlands Day", "2/2/1971"},
                {"13", "World Cancer Day", "4/2/2008"},
                {"14", "International Day of Zero Tolerance to Female Genital Mutilation", "6/2/2015"},
                {"15", "Nelson Mandela's Independence Day", "11/2/1992"},
                {"16", "World Darwin Day", "12/2/1993"},
                {"17", "World Radio Day", "13/2/2012"},
                {"18", "World Valentine Day", "14/2/1020"},
                {"19", "World Day of Social Justice", "20/2/2009"},
                {"20", "International Mother Language Day", "21/2/1952"},
                {"21", "World Scout Day", "22/2/1907"},
                {"22", "Al-Quds Day", "24/2/1996"},
                {"23", "World NGO Day", "27/2/1980"},
                {"24", "Oitihashik vashon", "7/3/1971"},
                {"25", "International Women’s Day", "8/3/1900"},
                {"26", "World Kidney Day", "12/3/2006"},
                {"27", "World Pi day", "14/3/1988"},
                {"28", "birth day of father of nation", "17/3/1920"},
                {"29", "Holi", "20/3/1000"},
                {"30", "International Day of Forests", "21/3/2007"},
                {"31", "World Water Day", "22/3/1992"},
                {"32", "Baha festival", "23/3/1789"},
                {"33", "Genocide day", "25/3/1971"},
                {"34", "Bangladesh Independence Day", "26/3/1971"},
                {"35", "World April Fools’ Day", "1/4/1668"},
                {"36", "World Autism Awareness Day", "2/4/1967"},
                {"37", "World Health Day", "7/4/1948"},
                {"38", "Biju Festival", "13/4/1750"},
                {"39", "International Mother Earth Day", "22/4/1992"},
                {"40", "English Language Day", "23/4/2010"},
                {"41", "Buddhist Purnima", "29/4/1029"},
                {"42", "may day", "1/5/1921"},
                {"43", "Rabindra Joyonti", "9/5/1861"},
                {"44", "World Migratory Bird  Day", "10/5/2006"},
                {"45", "Lai haoba", "17/5/1888"},
                {"46", "World Children Day", "1/6/1920"},
                {"47", "World Environment day", "5/6/1974"},
                {"48", "six-point movement", "7/6/1966"},
                {"49", "Monsoon festival ", "24/6/1877"},
                {"50", "Santal rebellion day", "30/6/1855"},
                {"51", "World population day ", "11/7/1989"},
                {"52", "Kang Festival", "14/7/1000"},
                {"53", "National Mourning Day", "15/8/1975"},
                {"54", "Worl photograpy day", "19/8/1939"},
                {"55", "Heirku Hindongba ", "11/9/1200"},
                {"56", "Armdforcesday", "21/9/1971"},
                {"57", "Najrul joyonti", "25/9/1899"},
                {"58", "Day of Non-Violence", "2/10/2006"},
                {"59", "Partition of Bengal", "16/10/1765"},
                {"60", "Safe Road Day", "22/10/1997"},
                {"61", "Probarona purnima", "24/10/1029"},
                {"62", "Kut Festival", "1/11/1800"},
                {"63", "Jail hotta dibosh", "3/11/1975"},
                {"64", "Kothin cibor dhan", "4/11/1000"},
                {"65", "National Revolution and Solidarity Day", "7/11/1975"},
                {"66", "PiTha festival ", "14/11/1878"},
                {"67", "Pohela Boishak", "15/11/1556"},
                {"68", "Manipur Sangai Festival", "21/11/2010"},
                {"69", "Moharaslila", "25/11/1779"},
                {"70", "Wangala festival ", "6/12/1976"},
                {"71", "Rukeya day", "9/12/1994"},
                {"72", "Shohid buddhijibi dibosh", "14/12/1971"},
                {"73", "victory day", "16/12/1971"},
                {"74", "Paush Mela", "21/12/1894"},
                {"75", "Cristmas day ", "25/12/1230"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "        NO ", "                 Event ", "            Started_ Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ChooseEventTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseEventTable.setRowHeight(30);
        ChooseEventTable.getTableHeader().setReorderingAllowed(false);
        ChooseEventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChooseEventTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ChooseEventTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 265, 753, 333);

        ChooseEventLabel.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        ChooseEventLabel.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChooseEventLabel.setText(" Event List");
        ChooseEventLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));
        getContentPane().add(ChooseEventLabel);
        ChooseEventLabel.setBounds(193, 219, 352, 40);

        ChooseEventFieldname.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventFieldname.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventFieldname.setToolTipText("Event Name");
        ChooseEventFieldname.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));
        ChooseEventFieldname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseEventFieldnameActionPerformed(evt);
            }
        });
        ChooseEventFieldname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChooseEventFieldnameKeyReleased(evt);
            }
        });
        getContentPane().add(ChooseEventFieldname);
        ChooseEventFieldname.setBounds(10, 151, 407, 57);

        ChooseEventFieldDate.setEditable(false);
        ChooseEventFieldDate.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventFieldDate.setForeground(new java.awt.Color(51, 0, 51));
        ChooseEventFieldDate.setToolTipText("Date");
        ChooseEventFieldDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 0), 2, true));
        getContentPane().add(ChooseEventFieldDate);
        ChooseEventFieldDate.setBounds(435, 151, 216, 57);

        ChooseEventEnterButton.setBackground(new java.awt.Color(51, 0, 51));
        ChooseEventEnterButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventEnterButton.setForeground(new java.awt.Color(0, 204, 204));
        ChooseEventEnterButton.setText("Enter");
        ChooseEventEnterButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChooseEventEnterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseEventEnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseEventEnterButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ChooseEventEnterButton);
        ChooseEventEnterButton.setBounds(669, 164, 94, 30);

        ChooseEventBackButton.setBackground(new java.awt.Color(51, 0, 51));
        ChooseEventBackButton.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseEventBackButton.setForeground(new java.awt.Color(0, 204, 204));
        ChooseEventBackButton.setText("Home");
        ChooseEventBackButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChooseEventBackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseEventBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseEventBackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ChooseEventBackButton);
        ChooseEventBackButton.setBounds(227, 616, 113, 34);

        ChooseExit.setBackground(new java.awt.Color(51, 0, 51));
        ChooseExit.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        ChooseExit.setForeground(new java.awt.Color(0, 204, 204));
        ChooseExit.setText("Exit");
        ChooseExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ChooseExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ChooseExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseExitActionPerformed(evt);
            }
        });
        getContentPane().add(ChooseExit);
        ChooseExit.setBounds(385, 616, 113, 34);

        Current_Time2.setBackground(new java.awt.Color(204, 204, 204));
        Current_Time2.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        Current_Time2.setForeground(new java.awt.Color(0, 51, 51));
        Current_Time2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Current_Time2.setText("Current_Time");
        Current_Time2.setToolTipText("Current_Time");
        Current_Time2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));
        getContentPane().add(Current_Time2);
        Current_Time2.setBounds(21, 23, 198, 45);

        Current_time.setEditable(false);
        Current_time.setBackground(new java.awt.Color(204, 204, 204));
        Current_time.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        Current_time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Current_time.setToolTipText("Current_Time");
        Current_time.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Current_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Current_timeActionPerformed(evt);
            }
        });
        getContentPane().add(Current_time);
        Current_time.setBounds(21, 74, 198, 55);

        jb3.setBackground(new java.awt.Color(51, 0, 51));
        jb3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jb3);
        jb3.setBounds(376, 49, 23, 19);

        jb2.setBackground(new java.awt.Color(153, 255, 204));
        jb2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 3, true));
        jb2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb2ActionPerformed(evt);
            }
        });
        getContentPane().add(jb2);
        jb2.setBounds(320, 50, 23, 18);

        jb8.setBackground(new java.awt.Color(153, 255, 204));
        jb8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 3, true));
        jb8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb8ActionPerformed(evt);
            }
        });
        getContentPane().add(jb8);
        jb8.setBounds(375, 91, 23, 18);

        jb4.setBackground(new java.awt.Color(153, 255, 204));
        jb4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 3, true));
        jb4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb4ActionPerformed(evt);
            }
        });
        getContentPane().add(jb4);
        jb4.setBounds(431, 50, 23, 18);

        jb1.setBackground(new java.awt.Color(51, 0, 51));
        jb1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jb1);
        jb1.setBounds(269, 50, 23, 18);

        jb6.setBackground(new java.awt.Color(153, 255, 204));
        jb6.setForeground(new java.awt.Color(51, 0, 51));
        jb6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 3, true));
        jb6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb6ActionPerformed(evt);
            }
        });
        getContentPane().add(jb6);
        jb6.setBounds(268, 91, 23, 18);

        jb7.setBackground(new java.awt.Color(51, 0, 51));
        jb7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jb7);
        jb7.setBounds(318, 91, 23, 18);

        Time_date.setEditable(false);
        Time_date.setBackground(new java.awt.Color(204, 102, 0));
        Time_date.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        Time_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Time_date.setToolTipText("");
        Time_date.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));
        Time_date.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Time_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Time_dateActionPerformed(evt);
            }
        });
        getContentPane().add(Time_date);
        Time_date.setBounds(250, 74, 271, 11);

        jb9.setBackground(new java.awt.Color(51, 0, 51));
        jb9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jb9);
        jb9.setBounds(427, 91, 23, 18);

        jb5.setBackground(new java.awt.Color(51, 0, 51));
        jb5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jb5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jb5);
        jb5.setBounds(484, 50, 23, 18);

        jb10.setBackground(new java.awt.Color(153, 255, 204));
        jb10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 51), 3, true));
        jb10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb10ActionPerformed(evt);
            }
        });
        getContentPane().add(jb10);
        jb10.setBounds(481, 91, 23, 18);

        Current_Date2.setBackground(new java.awt.Color(204, 204, 204));
        Current_Date2.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        Current_Date2.setForeground(new java.awt.Color(0, 51, 51));
        Current_Date2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Current_Date2.setText("Current_Date");
        Current_Date2.setToolTipText("Current_Date");
        Current_Date2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 3, true));
        getContentPane().add(Current_Date2);
        Current_Date2.setBounds(558, 23, 207, 45);

        Current_date.setEditable(false);
        Current_date.setBackground(new java.awt.Color(204, 204, 204));
        Current_date.setFont(new java.awt.Font("Algerian", 3, 24)); // NOI18N
        Current_date.setForeground(new java.awt.Color(51, 51, 51));
        Current_date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Current_date.setToolTipText("Current_Date");
        Current_date.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Current_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Current_dateActionPerformed(evt);
            }
        });
        getContentPane().add(Current_date);
        Current_date.setBounds(558, 74, 207, 48);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Wellcome/bek3.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 790, 600);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Wellcome/bek3.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 600, 790, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ChooseExitActionPerformed

    private void ChooseEventEnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseEventEnterButtonActionPerformed

        calculationDay();
        OutputData f = new OutputData(allDate, dateday);
        this.dispose();
    }//GEN-LAST:event_ChooseEventEnterButtonActionPerformed

    private void ChooseEventBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseEventBackButtonActionPerformed
        this.dispose();
        ChooseEvent f = new ChooseEvent();
    }//GEN-LAST:event_ChooseEventBackButtonActionPerformed

    private void ChooseEventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChooseEventTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) ChooseEventTable.getModel();
        int index = ChooseEventTable.getSelectedRow();

        ChooseEventFieldname.setText(model.getValueAt(index, 1).toString());
        ChooseEventFieldDate.setText(model.getValueAt(index, 2).toString());
        String st = ChooseEventFieldDate.getText();
        String[] ss = st.split("/");
        allDate = "" + ss[0] + "/" + ss[1] + "/" + ss[2];
        dd = Integer.parseInt(ss[0]);
        mm = Integer.parseInt(ss[1]);
        yy = Integer.parseInt(ss[2]);

    }//GEN-LAST:event_ChooseEventTableMouseClicked

    private void Current_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Current_timeActionPerformed

    }//GEN-LAST:event_Current_timeActionPerformed

    private void jb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb2ActionPerformed

    private void jb8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb8ActionPerformed

    private void jb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb4ActionPerformed

    private void jb6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb6ActionPerformed

    private void Time_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Time_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Time_dateActionPerformed

    private void jb10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb10ActionPerformed

    private void Current_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Current_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Current_dateActionPerformed

    private void ChooseEventFieldnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChooseEventFieldnameKeyReleased
       
        DefaultTableModel Table=(DefaultTableModel)ChooseEventTable.getModel();
        System.out.println("Table : "+Table);
        String search=ChooseEventFieldname.getText().toLowerCase();
        System.out.println("search : "+search);
        TableRowSorter<DefaultTableModel>tr=new TableRowSorter<DefaultTableModel>(Table);
        System.out.println("tr : "+tr);
        ChooseEventTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_ChooseEventFieldnameKeyReleased

    private void ChooseEventFieldnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseEventFieldnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChooseEventFieldnameActionPerformed

    public void calculationDay() {
        int n, year = yy, month = mm, date = dd, year_valu = 0, month_valu = 0, remnant = 0, div, all_sum, day;

        if ((100 <= year && year < 200) || (800 <= year && year < 900) || (1500 <= year && year < 1600) || (2100 <= year && year < 2200) || (2400 <= year && year < 2900) || (3500 <= year && year < 3600) || (4200 <= year && year < 4300) || (4900 <= year && year < 5000)) {
            if (100 <= year && year < 200) {
                year_valu = 5;
                remnant = year - 100;
            } else if (800 <= year && year < 900) {
                year_valu = 5;
                remnant = year - 800;
            } else if (1500 <= year && year < 1600) {
                year_valu = 5;
                remnant = year - 1500;
            } else if (2100 <= year && year < 2200) {
                year_valu = 5;
                remnant = year - 2100;
            } else if (2400 <= year && year < 2900) {
                year_valu = 5;
                remnant = year - 2400;
            } else if (3500 <= year && year < 3600) {
                year_valu = 5;
                remnant = year - 3500;
            } else if (4200 <= year && year < 4300) {
                remnant = year - 4200;
            } else if (4900 <= year && year < 5000) {
                year_valu = 5;
                remnant = year - 4900;
            }
        } else if ((200 <= year && year < 300) || (900 <= year && year < 1000) || (1600 <= year && year < 1700) || (2200 <= year && year < 2300) || (2900 <= year && year < 3000) || (3600 <= year && year < 3700) || (4300 <= year && year < 4400) || (year == 5000)) {
            if (200 <= year && year < 300) {
                year_valu = 4;
                remnant = year - 200;
            } else if (900 <= year && year < 1000) {
                year_valu = 4;
                remnant = year - 900;
            } else if (1600 <= year && year < 1700) {
                year_valu = 4;
                remnant = year - 1600;
            } else if (2200 <= year && year < 2300) {
                year_valu = 4;
                remnant = year - 2200;
            } else if (2900 <= year && year < 3000) {
                year_valu = 4;
                remnant = year - 2900;
            } else if (3600 <= year && year < 3700) {
                year_valu = 4;
                remnant = year - 3600;
            } else if (4300 <= year && year < 4400) {
                year_valu = 4;
                remnant = year - 4300;
            } else if (year == 5000) {
                year_valu = 4;
                remnant = year - 5000;
            }
        } else if ((300 <= year && year < 400) || (1000 <= year && year < 1100) || (1700 <= year && year < 1800) || (2300 <= year && year < 2400) || (3000 <= year && year < 3100) || (3700 <= year && year < 3800) || (4400 <= year && year < 4500)) {
            if (300 <= year && year < 400) {
                year_valu = 3;
                remnant = year - 300;
            } else if (1000 <= year && year < 1100) {
                year_valu = 3;
                remnant = year - 1000;
            } else if (1700 <= year && year < 1800) {
                year_valu = 3;
                remnant = year - 1700;
            } else if (2300 <= year && year < 2400) {
                year_valu = 3;
                remnant = year - 2300;
            } else if (3000 <= year && year < 3100) {
                year_valu = 3;
                remnant = year - 3000;
            } else if (3700 <= year && year < 3800) {
                year_valu = 3;
                remnant = year - 3700;
            } else if (4400 <= year && year < 4500) {
                year_valu = 3;
                remnant = year - 4400;
            }
        } else if ((400 <= year && year < 500) || (1100 <= year && year < 1200) || (1800 <= year && year < 1900) || (2400 <= year && year < 2500) || (3100 <= year && year < 3200) || (3800 <= year && year < 3900) || (4500 <= year && year < 4600)) {
            if (400 <= year && year < 500) {
                year_valu = 2;
                remnant = year - 400;
            } else if (1100 <= year && year < 1200) {
                year_valu = 2;
                remnant = year - 1100;
            } else if (1800 <= year && year < 1900) {
                year_valu = 2;
                remnant = year - 1800;
            } else if (2400 <= year && year < 2500) {
                year_valu = 2;
                remnant = year - 2400;
            } else if (3100 <= year && year < 3200) {
                year_valu = 2;
                remnant = year - 3100;
            } else if (3800 <= year && year < 3900) {
                year_valu = 2;
                remnant = year - 3800;
            } else if (4500 <= year && year < 4600) {
                year_valu = 2;
                remnant = year - 4500;
            }
        } else if ((500 <= year && year < 600) || (1200 <= year && year < 1300) || (2500 <= year && year < 2600) || (3200 <= year && year < 3300) || (3900 <= year && year < 4000) || (4600 <= year && year < 4700)) {
            if (500 <= year && year < 600) {
                year_valu = 1;
                remnant = year - 500;
            } else if (1200 <= year && year < 1300) {
                year_valu = 1;
                remnant = year - 1200;
            } else if (2500 <= year && year < 2600) {
                year_valu = 1;
                remnant = year - 2500;
            } else if (3200 <= year && year < 3300) {
                year_valu = 1;
                remnant = year - 3200;
            } else if (3900 <= year && year < 4000) {
                year_valu = 1;
                remnant = year - 3900;
            } else if (4600 <= year && year < 4700) {
                year_valu = 1;
                remnant = year - 4600;
            }
        } else if ((600 <= year && year < 700) || (1300 <= year && year < 1400) || (1900 <= year && year < 2000) || (2600 <= year && year < 2700) || (3300 <= year && year < 3400) || (4000 <= year && year < 4100) || (4700 <= year && year < 4800)) {
            if (600 <= year && year < 700) {
                year_valu = 0;
                remnant = year - 600;
            } else if (1300 <= year && year < 1400) {
                year_valu = 0;
                remnant = year - 1300;
            } else if (1900 <= year && year < 2000) {
                year_valu = 0;
                remnant = year - 1900;
            } else if (2600 <= year && year < 2700) {
                year_valu = 0;
                remnant = year - 2600;
            } else if (3300 <= year && year < 3400) {
                year_valu = 0;
                remnant = year - 3300;
            } else if (4000 <= year && year < 4100) {
                year_valu = 0;
                remnant = year - 4000;
            } else if (4700 <= year && year < 4800) {
                year_valu = 0;
                remnant = year - 4700;
            }
        } else if ((700 <= year && year < 800) || (1400 <= year && year < 1500) || (2000 <= year && year < 2100) || (2700 <= year && year < 2800) || (3400 <= year && year < 3500) || (4100 <= year && year < 4200) || (4800 <= year && year < 4900)) {
            if (700 <= year && year < 800) {
                year_valu = 6;
                remnant = year - 700;
            } else if (1400 <= year && year < 1500) {
                year_valu = 6;
                remnant = year - 1400;
            } else if (2000 <= year && year < 2100) {
                year_valu = 6;
                remnant = year - 2000;
            } else if (2700 <= year && year < 2800) {
                year_valu = 6;
                remnant = year - 2700;
            } else if (3400 <= year && year < 3500) {
                year_valu = 6;
                remnant = year - 3400;
            } else if (4100 <= year && year < 4200) {
                year_valu = 6;
                remnant = year - 4100;
            } else if (4800 <= year && year < 4900) {
                year_valu = 6;
                remnant = year - 4800;
            }
        }

        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
            if (month == 1) {
                month_valu = 0;
            } else if (month == 2) {
                month_valu = 3;
            }
        } else {
            if (month == 1) {
                month_valu = 1;
            } else if (month == 2) {
                month_valu = 4;
            }
        }
        if ((month == 3) || (month == 11)) {
            month_valu = 4;
        } else if ((month == 4) || (month == 7)) {
            month_valu = 0;
        } else if (month == 5) {
            month_valu = 2;
        } else if (month == 6) {
            month_valu = 5;
        } else if (month == 8) {
            month_valu = 3;
        } else if ((month == 9) || (month == 12)) {
            month_valu = 6;
        } else if (month == 10) {
            month_valu = 1;
        }

        div = remnant / 4;

        all_sum = year_valu + remnant + div + month_valu + date;

        day = all_sum % 7;

        if (day == 0) {
            dateday = "Saturday";
        } else if (day == 1) {
            dateday = "Sunday";
        } else if (day == 2) {
            dateday = "Monday";
        } else if (day == 3) {
            dateday = "Tuesday";
        } else if (day == 4) {
            dateday = "Wednesday";
        } else if (day == 5) {
            dateday = "Thursday";
        } else if (day == 6) {
            dateday = "Friday";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChooseEventFrame f = new ChooseEventFrame();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChooseEventBackButton;
    private javax.swing.JButton ChooseEventEnterButton;
    private javax.swing.JTextField ChooseEventFieldDate;
    private javax.swing.JTextField ChooseEventFieldname;
    private javax.swing.JLabel ChooseEventLabel;
    private javax.swing.JTable ChooseEventTable;
    private javax.swing.JButton ChooseExit;
    private javax.swing.JLabel Current_Date2;
    private javax.swing.JLabel Current_Time2;
    private javax.swing.JTextField Current_date;
    private javax.swing.JTextField Current_time;
    private javax.swing.JTextField Time_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb1;
    private javax.swing.JButton jb10;
    private javax.swing.JButton jb2;
    private javax.swing.JButton jb3;
    private javax.swing.JButton jb4;
    private javax.swing.JButton jb5;
    private javax.swing.JButton jb6;
    private javax.swing.JButton jb7;
    private javax.swing.JButton jb8;
    private javax.swing.JButton jb9;
    // End of variables declaration//GEN-END:variables
}
